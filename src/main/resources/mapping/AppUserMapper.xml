<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper  namespace="com.hand.al.springbootdemo1.mapper.AppUserMapper">
    <cache/>

<!--    定义sql片段-->
    <sql id="appUserColumns"> id,username,phone,dept_id </sql>
<!--    定义resultMap 当数据库字段名称和实体类名称不一致的时候使用-->
<!--    或者使用 as 来定义别名-->
    <resultMap id="appUserResultMap" type="AppUser">
        <id property="id" column="id" />
        <result property="username" column="username"/>
        <result property="phone" column="phone"/>
        <result property="dept_id" column="dpet_id"/>
    </resultMap>
    <select id="findUserById" resultMap="appUserResultMap">
        select * from appuser where id=#{id}
    </select>
    <select id="findUserById2" resultType="hashMap"  parameterType="long">
        select * from appuser where id=#{id}
    </select>
<!--如果对应的参数不在实体类中 就要用@Param注3解来标识这个属性-->
<!--    //    org.apache.ibatis.reflection.ReflectionException: There is no getter for property named-->
<!--    原因就在于resultType代表的是List中的元素类型，而不应该是List本身，究其原因就在于被dao中的方法声明（标红出）-->
<!--    MyBatis之java.lang.UnsupportedOperationException-->
    <select id="listAppUser" parameterType="string" resultType="AppUser">
        select <include refid="appUserColumns"></include> from appuser
        order by ${column_name}
    </select>

<!--    insert、update 能够把实体类自动转化成对应的属性-->
<!--    keyProperty 指定将返回的主键放在哪个字段上-->
<!--    useGeneratedKeys 指定mybatis使用数据库的主键策略并将值返回-->
    <insert id="insetAppUser" keyProperty="id" useGeneratedKeys="true">
        insert into appuser(<include refid="appUserColumns"></include>)
        values(#{id},#{username},#{phone},#{dept_id})
    </insert>

<!--    执行顺序:先执行 selectKey的sql 获得一个主键，然后设置到保存的实体类对象中
                最后在执行insert语句
    -->
    <insert id="saveAppUser" >
        <selectKey keyProperty="id" resultType="long" order="AFTER">
--                 mysql不支持这种随机数生成的方式
--             select CAST(RANDOM()*1000000 as INTEGER) a from SYSIBM.SYSDUMMY1
--             如果指定为before会报这个错：Duplicate entry '13' for key 'PRIMARY'
            select LAST_INSERT_ID() as id
        </selectKey>
<!--        <selectKey keyProperty="id" resultType="long" order="BEFORE">-->
<!--            select uuid();-->
<!--        </selectKey>-->
        insert into appuser(<include refid="appUserColumns"></include>)
        values(#{id},#{username},#{phone},#{dept_id})
    </insert>
    
    <update id="updateAppUser">
        update appuser
        set username = #{username},
            phone = #{phone},
            dept_id = #{dept_id}
        where id = #{id}
    </update>
    
    <delete id="deleteAppUser">
        delete from appuser
        where id = #{id}
    </delete>
</mapper>